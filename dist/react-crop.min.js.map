{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///react-crop.min.js","webpack:///webpack/bootstrap 5ae4ff13e1c4b043f1f2?8682","webpack:///./lib/index.src.js?2b01","webpack:///external \"react\"?3c62","webpack:///./lib/draggable-resizable-box.js?33f2","webpack:///./~/data-uri-to-blob/index.js?8d16"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_react","_react2","_draggableResizableBox","_draggableResizableBox2","_dataUriToBlob","_dataUriToBlob2","createClass","displayName","propTypes","width","PropTypes","number","isRequired","height","center","bool","image","any","widthLabel","string","heightLabel","offsetXLabel","offsetYLabel","onImageLoaded","func","minConstraints","arrayOf","getDefaultProps","getInitialState","imageLoaded","props","url","window","URL","createObjectURL","componentWillReceiveProps","nextProps","setState","shouldComponentUpdate","nextState","size","name","type","state","onLoad","evt","_this","box","refs","getBoundingClientRect","img","cropImage","_this2","Promise","resolve","reject","Image","onload","canvas","ctx","getContext","xScale","naturalWidth","yScale","naturalHeight","imageOffsetX","offset","left","imageOffsetY","top","imageWidth","dimensions","imageHeight","canvasOffsetX","Math","floor","canvasOffsetY","canvasWidth","canvasHeight","clearRect","drawImage","toDataURL","src","onChange","render","createElement","ref","className","style","minWidth","minHeight","aspectRatio","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","err","Array","isArray","TypeError","array","children","node","_preserveAspectRatio","preserveAspectRatio","_preserveAspectRatio2","centerYOffset","centerXOffset","bottom","right","componentDidMount","document","addEventListener","eventMove","eventEnd","handleKey","componentWillUnmount","removeEventListener","calculateDimensions","_ref","max","currentAspectRatio","constrainBoundary","side","getClientCoordinates","touches","clientX","clientY","resizing","onResize","moving","eventMoveBox","stopResize","stopMove","startResize","corner","event","stopPropagation","preventDefault","nw","mousePos","boxPos","pos","assign","_preserveAspectRatio3","_preserveAspectRatio32","ne","_preserveAspectRatio4","_preserveAspectRatio42","se","_preserveAspectRatio5","_preserveAspectRatio52","sw","_preserveAspectRatio6","_preserveAspectRatio62","parentElement","coordinates","position","resize","controlsResize","target","widthDifference","heightDifference","widthChanged","heightChanged","startMove","_getClientCoordinates","_getClientCoordinates2","movedX","movedY","moveBox","controlsMoveBox","keyboardResize","change","_preserveAspectRatio7","_preserveAspectRatio72","widthChange","heightChange","shiftKey","key","_calculateDimensions","topStyle","bottomStyle","leftStyle","rightStyle","round","tabIndex","onMouseDown","onTouchStart","bind","mime","uri","split","slice","Blob","hasArrayBufferView","Uint8Array","data","bytes","atob","buf","ArrayBuffer","charCodeAt","blob","webkitSlice"],"mappings":"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","file":"react-crop.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCrop\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactCrop\"] = factory(root[\"react\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCrop\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactCrop\"] = factory(root[\"react\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _draggableResizableBox = __webpack_require__(2);\n\t\n\tvar _draggableResizableBox2 = _interopRequireDefault(_draggableResizableBox);\n\t\n\tvar _dataUriToBlob = __webpack_require__(3);\n\t\n\tvar _dataUriToBlob2 = _interopRequireDefault(_dataUriToBlob);\n\t\n\texports['default'] = _react2['default'].createClass({\n\t  displayName: 'Cropper',\n\t\n\t  propTypes: {\n\t    width: _react2['default'].PropTypes.number.isRequired,\n\t    height: _react2['default'].PropTypes.number.isRequired,\n\t    center: _react2['default'].PropTypes.bool,\n\t    image: _react2['default'].PropTypes.any,\n\t    widthLabel: _react2['default'].PropTypes.string,\n\t    heightLabel: _react2['default'].PropTypes.string,\n\t    offsetXLabel: _react2['default'].PropTypes.string,\n\t    offsetYLabel: _react2['default'].PropTypes.string,\n\t    onImageLoaded: _react2['default'].PropTypes.func,\n\t    minConstraints: _react2['default'].PropTypes.arrayOf(_react2['default'].PropTypes.number)\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      center: false,\n\t      width: 'Width',\n\t      height: 'Height',\n\t      offsetXLabel: 'Offset X',\n\t      offsetYLabel: 'Offset Y'\n\t    };\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      imageLoaded: false,\n\t      width: this.props.width,\n\t      height: this.props.height,\n\t      url: window.URL.createObjectURL(this.props.image)\n\t    };\n\t  },\n\t\n\t  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t    if (this.props.image !== nextProps.image) {\n\t      this.setState({\n\t        url: window.URL.createObjectURL(nextProps.image),\n\t        imageLoaded: false\n\t      });\n\t    }\n\t  },\n\t\n\t  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {\n\t    var image = this.props.image;\n\t\n\t    return nextProps.image.size !== image.size || nextProps.image.name !== image.name || nextProps.image.type !== image.type || nextState.imageLoaded !== this.state.imageLoaded;\n\t  },\n\t\n\t  onLoad: function onLoad(evt) {\n\t    var _this = this;\n\t\n\t    var box = this.refs.box.getBoundingClientRect();\n\t    this.setState({\n\t      imageLoaded: true,\n\t      width: box.width,\n\t      height: box.height\n\t    }, function () {\n\t      var img = _this.refs.image;\n\t      _this.props.onImageLoaded && _this.props.onImageLoaded(img);\n\t    });\n\t  },\n\t\n\t  cropImage: function cropImage() {\n\t    var _this2 = this;\n\t\n\t    return new Promise(function (resolve, reject) {\n\t      var img = new Image();\n\t      img.onload = function () {\n\t        var canvas = _this2.refs.canvas;\n\t        var img = _this2.refs.image;\n\t        var ctx = canvas.getContext('2d');\n\t        var xScale = img.naturalWidth / _this2.state.width;\n\t        var yScale = img.naturalHeight / _this2.state.height;\n\t\n\t        var imageOffsetX = xScale < 1 ? 0 : _this2.state.offset.left * xScale;\n\t        var imageOffsetY = yScale < 1 ? 0 : _this2.state.offset.top * yScale;\n\t        var imageWidth = xScale < 1 ? img.naturalWidth : _this2.state.dimensions.width * xScale;\n\t        var imageHeight = yScale < 1 ? img.naturalHeight : _this2.state.dimensions.height * yScale;\n\t\n\t        var canvasOffsetX = xScale < 1 ? Math.floor((_this2.state.dimensions.width - img.naturalWidth) / 2) : 0;\n\t        var canvasOffsetY = yScale < 1 ? Math.floor((_this2.state.dimensions.height - img.naturalHeight) / 2) : 0;\n\t        var canvasWidth = xScale < 1 ? img.naturalWidth : _this2.props.width;\n\t        var canvasHeight = yScale < 1 ? img.naturalHeight : _this2.props.height;\n\t\n\t        ctx.clearRect(0, 0, _this2.props.width, _this2.props.height);\n\t        ctx.drawImage(img, imageOffsetX, imageOffsetY, imageWidth, imageHeight, canvasOffsetX, canvasOffsetY, canvasWidth, canvasHeight);\n\t        resolve((0, _dataUriToBlob2['default'])(canvas.toDataURL()));\n\t      };\n\t      img.src = window.URL.createObjectURL(_this2.props.image);\n\t    });\n\t  },\n\t\n\t  onChange: function onChange(offset, dimensions) {\n\t    this.setState({ offset: offset, dimensions: dimensions });\n\t  },\n\t\n\t  render: function render() {\n\t    return _react2['default'].createElement(\n\t      'div',\n\t      {\n\t        ref: 'box',\n\t        className: 'Cropper',\n\t        style: {\n\t          minWidth: this.props.width,\n\t          minHeight: this.props.height\n\t        } },\n\t      _react2['default'].createElement('canvas', {\n\t        className: 'Cropper-canvas',\n\t        ref: 'canvas',\n\t        width: this.props.width,\n\t        height: this.props.height }),\n\t      _react2['default'].createElement('img', {\n\t        ref: 'image',\n\t        src: this.state.url,\n\t        className: 'Cropper-image',\n\t        onLoad: this.onLoad,\n\t        style: { top: this.state.height / 2 } }),\n\t      this.state.imageLoaded && _react2['default'].createElement(\n\t        'div',\n\t        { className: 'box' },\n\t        _react2['default'].createElement(\n\t          _draggableResizableBox2['default'],\n\t          {\n\t            aspectRatio: this.props.width / this.props.height,\n\t            width: this.state.width,\n\t            height: this.state.height,\n\t            minConstraints: this.props.minConstraints,\n\t            onChange: this.onChange,\n\t            widthLabel: this.props.widthLabel,\n\t            heightLabel: this.props.heightLabel,\n\t            offsetXLabel: this.props.offsetXLabel,\n\t            offsetYLabel: this.props.offsetYLabel },\n\t          _react2['default'].createElement('div', { className: 'Cropper-box' })\n\t        )\n\t      )\n\t    );\n\t  }\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\texports['default'] = _react2['default'].createClass({\n\t  displayName: 'DraggableResizableBox',\n\t\n\t  propTypes: {\n\t    aspectRatio: _react2['default'].PropTypes.number.isRequired,\n\t    width: _react2['default'].PropTypes.number.isRequired,\n\t    height: _react2['default'].PropTypes.number.isRequired,\n\t    onChange: _react2['default'].PropTypes.func,\n\t    offset: _react2['default'].PropTypes.array,\n\t    minConstraints: _react2['default'].PropTypes.array,\n\t    children: _react2['default'].PropTypes.node,\n\t    widthLabel: _react2['default'].PropTypes.string,\n\t    heightLabel: _react2['default'].PropTypes.string,\n\t    offsetXLabel: _react2['default'].PropTypes.string,\n\t    offsetYLabel: _react2['default'].PropTypes.string\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      widthLabel: 'Width',\n\t      heightLabel: 'Height',\n\t      offsetXLabel: 'Offset X',\n\t      offsetYLabel: 'Offset Y'\n\t    };\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t    var _preserveAspectRatio = this.preserveAspectRatio(this.props.width, this.props.height);\n\t\n\t    var _preserveAspectRatio2 = _slicedToArray(_preserveAspectRatio, 2);\n\t\n\t    var width = _preserveAspectRatio2[0];\n\t    var height = _preserveAspectRatio2[1];\n\t\n\t    var centerYOffset = (this.props.height - height) / 2;\n\t    var centerXOffset = (this.props.width - width) / 2;\n\t    return {\n\t      top: centerYOffset,\n\t      left: centerXOffset,\n\t      bottom: centerYOffset,\n\t      right: centerXOffset,\n\t      width: width,\n\t      height: height\n\t    };\n\t  },\n\t\n\t  componentDidMount: function componentDidMount() {\n\t    document.addEventListener('mousemove', this.eventMove);\n\t    document.addEventListener('mouseup', this.eventEnd);\n\t    document.addEventListener('touchmove', this.eventMove);\n\t    document.addEventListener('touchend', this.eventEnd);\n\t    document.addEventListener('keydown', this.handleKey);\n\t    this.props.onChange({\n\t      top: this.state.top,\n\t      left: this.state.left\n\t    }, {\n\t      width: this.state.width,\n\t      height: this.state.height\n\t    });\n\t  },\n\t\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    document.removeEventListener('mousemove', this.eventMove);\n\t    document.removeEventListener('mouseup', this.eventEnd);\n\t    document.removeEventListener('touchmove', this.eventMove);\n\t    document.removeEventListener('touchend', this.eventEnd);\n\t    document.removeEventListener('keydown', this.handleKey);\n\t  },\n\t\n\t  calculateDimensions: function calculateDimensions(_ref) {\n\t    var top = _ref.top;\n\t    var left = _ref.left;\n\t    var bottom = _ref.bottom;\n\t    var right = _ref.right;\n\t\n\t    return { width: this.props.width - left - right, height: this.props.height - top - bottom };\n\t  },\n\t\n\t  // If you do this, be careful of constraints\n\t  preserveAspectRatio: function preserveAspectRatio(width, height) {\n\t    if (this.props.minConstraints) {\n\t      width = Math.max(width, this.props.minConstraints[0]);\n\t      height = Math.max(height, this.props.minConstraints[1]);\n\t    }\n\t    var currentAspectRatio = width / height;\n\t\n\t    if (currentAspectRatio < this.props.aspectRatio) {\n\t      return [width, width / this.props.aspectRatio];\n\t    } else if (currentAspectRatio > this.props.aspectRatio) {\n\t      return [height * this.props.aspectRatio, height];\n\t    } else {\n\t      return [width, height];\n\t    }\n\t  },\n\t\n\t  constrainBoundary: function constrainBoundary(side) {\n\t    return side < 0 ? 0 : side;\n\t  },\n\t\n\t  getClientCoordinates: function getClientCoordinates(evt) {\n\t    return evt.touches ? {\n\t      clientX: evt.touches[0].clientX,\n\t      clientY: evt.touches[0].clientY\n\t    } : {\n\t      clientX: evt.clientX,\n\t      clientY: evt.clientY\n\t    };\n\t  },\n\t\n\t  eventMove: function eventMove(evt) {\n\t    if (this.state.resizing) {\n\t      this.onResize(evt);\n\t    } else if (this.state.moving) {\n\t      this.eventMoveBox(evt);\n\t    }\n\t  },\n\t\n\t  eventEnd: function eventEnd(evt) {\n\t    if (this.state.resizing) {\n\t      this.stopResize(evt);\n\t    } else if (this.state.moving) {\n\t      this.stopMove(evt);\n\t    }\n\t  },\n\t\n\t  // Resize methods\n\t  startResize: function startResize(corner, event) {\n\t    event.stopPropagation();\n\t    event.preventDefault();\n\t    this.setState({\n\t      resizing: true,\n\t      corner: corner\n\t    });\n\t  },\n\t\n\t  stopResize: function stopResize() {\n\t    this.setState({ resizing: false });\n\t  },\n\t\n\t  // resize strategies\n\t  nw: function nw(mousePos, boxPos) {\n\t    var pos = Object.assign({}, this.state, {\n\t      top: this.constrainBoundary(mousePos.clientY - boxPos.top),\n\t      left: this.constrainBoundary(mousePos.clientX - boxPos.left)\n\t    });\n\t    var dimensions = this.calculateDimensions(pos);\n\t\n\t    var _preserveAspectRatio3 = this.preserveAspectRatio(dimensions.width, dimensions.height);\n\t\n\t    var _preserveAspectRatio32 = _slicedToArray(_preserveAspectRatio3, 2);\n\t\n\t    var width = _preserveAspectRatio32[0];\n\t    var height = _preserveAspectRatio32[1];\n\t\n\t    pos.top = this.props.height - pos.bottom - height;\n\t    pos.left = this.props.width - pos.right - width;\n\t    return pos;\n\t  },\n\t  ne: function ne(mousePos, boxPos) {\n\t    var pos = Object.assign({}, this.state, {\n\t      top: this.constrainBoundary(mousePos.clientY - boxPos.top),\n\t      right: this.constrainBoundary(boxPos.right - mousePos.clientX)\n\t    });\n\t    var dimensions = this.calculateDimensions(pos);\n\t\n\t    var _preserveAspectRatio4 = this.preserveAspectRatio(dimensions.width, dimensions.height);\n\t\n\t    var _preserveAspectRatio42 = _slicedToArray(_preserveAspectRatio4, 2);\n\t\n\t    var width = _preserveAspectRatio42[0];\n\t    var height = _preserveAspectRatio42[1];\n\t\n\t    pos.top = this.props.height - pos.bottom - height;\n\t    pos.right = this.props.width - pos.left - width;\n\t    return pos;\n\t  },\n\t  se: function se(mousePos, boxPos) {\n\t    var pos = Object.assign({}, this.state, {\n\t      bottom: this.constrainBoundary(boxPos.bottom - mousePos.clientY),\n\t      right: this.constrainBoundary(boxPos.right - mousePos.clientX)\n\t    });\n\t    var dimensions = this.calculateDimensions(pos);\n\t\n\t    var _preserveAspectRatio5 = this.preserveAspectRatio(dimensions.width, dimensions.height);\n\t\n\t    var _preserveAspectRatio52 = _slicedToArray(_preserveAspectRatio5, 2);\n\t\n\t    var width = _preserveAspectRatio52[0];\n\t    var height = _preserveAspectRatio52[1];\n\t\n\t    pos.bottom = this.props.height - pos.top - height;\n\t    pos.right = this.props.width - pos.left - width;\n\t    return pos;\n\t  },\n\t  sw: function sw(mousePos, boxPos) {\n\t    var pos = Object.assign({}, this.state, {\n\t      bottom: this.constrainBoundary(boxPos.bottom - mousePos.clientY),\n\t      left: this.constrainBoundary(mousePos.clientX - boxPos.left)\n\t    });\n\t    var dimensions = this.calculateDimensions(pos);\n\t\n\t    var _preserveAspectRatio6 = this.preserveAspectRatio(dimensions.width, dimensions.height);\n\t\n\t    var _preserveAspectRatio62 = _slicedToArray(_preserveAspectRatio6, 2);\n\t\n\t    var width = _preserveAspectRatio62[0];\n\t    var height = _preserveAspectRatio62[1];\n\t\n\t    pos.bottom = this.props.height - pos.top - height;\n\t    pos.left = this.props.width - pos.right - width;\n\t    return pos;\n\t  },\n\t\n\t  onResize: function onResize(event) {\n\t    var box = this.refs.box.parentElement.parentElement.getBoundingClientRect();\n\t    var coordinates = this.getClientCoordinates(event);\n\t    var position = this[this.state.corner](coordinates, box);\n\t    this.resize(position, coordinates);\n\t  },\n\t\n\t  controlsResize: function controlsResize(event) {\n\t    var box = this.refs.box.parentElement.parentElement.getBoundingClientRect();\n\t    var width = event.target.name === 'width' ? +event.target.value : +event.target.value * this.props.aspectRatio;\n\t    var height = event.target.name === 'height' ? +event.target.value : +event.target.value / this.props.aspectRatio;\n\t    var dimensions = this.preserveAspectRatio(width, height);\n\t    width = dimensions[0];\n\t    height = dimensions[1];\n\t\n\t    if (width > box.width - this.state.left || height > box.height - this.state.top) return;\n\t\n\t    var widthDifference = this.state.width - width;\n\t    var heightDifference = this.state.height - height;\n\t    var pos = Object.assign({}, this.state, {\n\t      right: this.state.right + widthDifference,\n\t      bottom: this.state.bottom + heightDifference\n\t    });\n\t    var coordinates = {\n\t      clientX: box.right - pos.right,\n\t      clientY: box.bottom - pos.bottom\n\t    };\n\t\n\t    this.resize(pos, coordinates);\n\t  },\n\t\n\t  resize: function resize(position, coordinates) {\n\t    var _this = this;\n\t\n\t    var dimensions = this.calculateDimensions(position);\n\t    var widthChanged = dimensions.width !== this.state.width,\n\t        heightChanged = dimensions.height !== this.state.height;\n\t    if (!widthChanged && !heightChanged) return;\n\t\n\t    this.setState(Object.assign({}, coordinates, position, dimensions), function () {\n\t      _this.props.onChange({\n\t        top: position.top,\n\t        left: position.left\n\t      }, dimensions);\n\t    });\n\t  },\n\t\n\t  // Move methods\n\t  startMove: function startMove(evt) {\n\t    var _getClientCoordinates = this.getClientCoordinates(evt);\n\t\n\t    var clientX = _getClientCoordinates.clientX;\n\t    var clientY = _getClientCoordinates.clientY;\n\t\n\t    this.setState({\n\t      moving: true,\n\t      clientX: clientX,\n\t      clientY: clientY\n\t    });\n\t  },\n\t\n\t  stopMove: function stopMove(evt) {\n\t    this.setState({\n\t      moving: false\n\t    });\n\t  },\n\t\n\t  eventMoveBox: function eventMoveBox(evt) {\n\t    evt.preventDefault();\n\t\n\t    var _getClientCoordinates2 = this.getClientCoordinates(evt);\n\t\n\t    var clientX = _getClientCoordinates2.clientX;\n\t    var clientY = _getClientCoordinates2.clientY;\n\t\n\t    var movedX = clientX - this.state.clientX;\n\t    var movedY = clientY - this.state.clientY;\n\t\n\t    this.moveBox(clientX, clientY, movedX, movedY);\n\t  },\n\t\n\t  controlsMoveBox: function controlsMoveBox(evt) {\n\t    var movedX = evt.target.name === 'x' ? evt.target.value - this.state.left : 0;\n\t    var movedY = evt.target.name === 'y' ? evt.target.value - this.state.top : 0;\n\t    this.moveBox(0, 0, movedX, movedY);\n\t  },\n\t\n\t  moveBox: function moveBox(clientX, clientY, movedX, movedY) {\n\t    var _this2 = this;\n\t\n\t    var position = {\n\t      top: this.constrainBoundary(this.state.top + movedY),\n\t      left: this.constrainBoundary(this.state.left + movedX),\n\t      bottom: this.constrainBoundary(this.state.bottom - movedY),\n\t      right: this.constrainBoundary(this.state.right - movedX)\n\t    };\n\t\n\t    if (!position.top) {\n\t      position.bottom = this.props.height - this.state.height;\n\t    }\n\t    if (!position.bottom) {\n\t      position.top = this.props.height - this.state.height;\n\t    }\n\t    if (!position.left) {\n\t      position.right = this.props.width - this.state.width;\n\t    }\n\t    if (!position.right) {\n\t      position.left = this.props.width - this.state.width;\n\t    }\n\t\n\t    this.setState(Object.assign({}, {\n\t      clientX: clientX,\n\t      clientY: clientY\n\t    }, position), function () {\n\t      _this2.props.onChange({\n\t        top: position.top,\n\t        left: position.left\n\t      }, _this2.calculateDimensions(position));\n\t    });\n\t  },\n\t\n\t  keyboardResize: function keyboardResize(change) {\n\t    if (this.state.right - change < 0) {\n\t      return;\n\t    }\n\t    if (this.state.bottom - change < 0) {\n\t      return;\n\t    }\n\t\n\t    var _preserveAspectRatio7 = this.preserveAspectRatio(this.state.width + change, this.state.height + change);\n\t\n\t    var _preserveAspectRatio72 = _slicedToArray(_preserveAspectRatio7, 2);\n\t\n\t    var width = _preserveAspectRatio72[0];\n\t    var height = _preserveAspectRatio72[1];\n\t\n\t    var widthChange = width - this.state.width;\n\t    var heightChange = height - this.state.height;\n\t\n\t    this.setState({\n\t      bottom: this.state.bottom - heightChange,\n\t      right: this.state.right - widthChange,\n\t      width: width,\n\t      height: height\n\t    });\n\t  },\n\t\n\t  handleKey: function handleKey(event) {\n\t    if (event.shiftKey) {\n\t      if (event.key === 'ArrowUp') {\n\t        this.keyboardResize(-10);\n\t        event.preventDefault();\n\t      } else if (event.key === 'ArrowDown') {\n\t        this.keyboardResize(10);\n\t        event.preventDefault();\n\t      } else if (event.key === 'ArrowLeft') {\n\t        this.keyboardResize(-10);\n\t        event.preventDefault();\n\t      } else if (event.key === 'ArrowRight') {\n\t        this.keyboardResize(10);\n\t        event.preventDefault();\n\t      }\n\t    } else {\n\t      if (event.key === 'ArrowUp') {\n\t        this.moveBox(this.state.clientX, this.state.clientY, 0, -10);\n\t        event.preventDefault();\n\t      } else if (event.key === 'ArrowDown') {\n\t        this.moveBox(this.state.clientX, this.state.clientY, 0, 10);\n\t        event.preventDefault();\n\t      } else if (event.key === 'ArrowLeft') {\n\t        this.moveBox(this.state.clientX, this.state.clientY, -10, 0);\n\t        event.preventDefault();\n\t      } else if (event.key === 'ArrowRight') {\n\t        this.moveBox(this.state.clientX, this.state.clientY, 10, 0);\n\t        event.preventDefault();\n\t      }\n\t    }\n\t  },\n\t\n\t  render: function render() {\n\t    var style = {\n\t      position: 'absolute',\n\t      top: this.state.top,\n\t      left: this.state.left,\n\t      right: this.state.right,\n\t      bottom: this.state.bottom\n\t    };\n\t\n\t    var _calculateDimensions = this.calculateDimensions(this.state);\n\t\n\t    var width = _calculateDimensions.width;\n\t    var height = _calculateDimensions.height;\n\t\n\t    var topStyle = {\n\t      height: this.state.top\n\t    };\n\t    var bottomStyle = {\n\t      height: this.state.bottom\n\t    };\n\t    var leftStyle = {\n\t      top: this.state.top,\n\t      right: width + this.state.right,\n\t      bottom: this.state.bottom\n\t    };\n\t    var rightStyle = {\n\t      top: this.state.top,\n\t      left: width + this.state.left,\n\t      bottom: this.state.bottom\n\t    };\n\t\n\t    return _react2['default'].createElement(\n\t      'div',\n\t      { ref: 'box', className: 'DraggableResizable' },\n\t      _react2['default'].createElement(\n\t        'div',\n\t        { className: 'DraggableResizable-controls' },\n\t        _react2['default'].createElement(\n\t          'label',\n\t          null,\n\t          this.props.offsetXLabel,\n\t          _react2['default'].createElement('input', {\n\t            name: 'x',\n\t            value: Math.round(this.state.left),\n\t            onChange: this.controlsMoveBox,\n\t            tabIndex: '-1',\n\t            type: 'number' })\n\t        ),\n\t        _react2['default'].createElement(\n\t          'label',\n\t          null,\n\t          this.props.offsetYLabel,\n\t          _react2['default'].createElement('input', {\n\t            name: 'y',\n\t            value: Math.round(this.state.top),\n\t            onChange: this.controlsMoveBox,\n\t            tabIndex: '-1',\n\t            type: 'number' })\n\t        ),\n\t        _react2['default'].createElement(\n\t          'label',\n\t          null,\n\t          this.props.widthLabel,\n\t          _react2['default'].createElement('input', {\n\t            name: 'width',\n\t            value: Math.round(width),\n\t            type: 'number',\n\t            tabIndex: '-1',\n\t            onChange: this.controlsResize })\n\t        ),\n\t        _react2['default'].createElement(\n\t          'label',\n\t          null,\n\t          this.props.heightLabel,\n\t          _react2['default'].createElement('input', {\n\t            value: Math.round(height),\n\t            type: 'number',\n\t            name: 'height',\n\t            tabIndex: '-1',\n\t            onChange: this.controlsResize })\n\t        )\n\t      ),\n\t      _react2['default'].createElement('div', { className: 'DraggableResizable-top', style: topStyle }),\n\t      _react2['default'].createElement('div', { className: 'DraggableResizable-left', style: leftStyle }),\n\t      _react2['default'].createElement(\n\t        'div',\n\t        { style: style, onMouseDown: this.startMove, onTouchStart: this.startMove },\n\t        this.props.children,\n\t        _react2['default'].createElement('div', { className: 'resize-handle resize-handle-se',\n\t          onMouseDown: this.startResize.bind(null, 'se'),\n\t          onTouchStart: this.startResize.bind(null, 'se') }),\n\t        _react2['default'].createElement('div', { className: 'resize-handle resize-handle-ne',\n\t          onMouseDown: this.startResize.bind(null, 'ne'),\n\t          onTouchStart: this.startResize.bind(null, 'ne') }),\n\t        _react2['default'].createElement('div', { className: 'resize-handle resize-handle-sw',\n\t          onMouseDown: this.startResize.bind(null, 'sw'),\n\t          onTouchStart: this.startResize.bind(null, 'sw') }),\n\t        _react2['default'].createElement('div', { className: 'resize-handle resize-handle-nw',\n\t          onMouseDown: this.startResize.bind(null, 'nw'),\n\t          onTouchStart: this.startResize.bind(null, 'nw') })\n\t      ),\n\t      _react2['default'].createElement('div', { className: 'DraggableResizable-right', style: rightStyle }),\n\t      _react2['default'].createElement('div', { className: 'DraggableResizable-bottom', style: bottomStyle })\n\t    );\n\t  }\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Blob constructor.\n\t */\n\t\n\tvar Blob = window.Blob;\n\t\n\t/**\n\t * ArrayBufferView support.\n\t */\n\t\n\tvar hasArrayBufferView = new Blob([new Uint8Array(100)]).size == 100;\n\t\n\t/**\n\t * Return a `Blob` for the given data `uri`.\n\t *\n\t * @param {String} uri\n\t * @return {Blob}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(uri){\n\t  var data = uri.split(',')[1];\n\t  var bytes = atob(data);\n\t  var buf = new ArrayBuffer(bytes.length);\n\t  var arr = new Uint8Array(buf);\n\t  for (var i = 0; i < bytes.length; i++) {\n\t    arr[i] = bytes.charCodeAt(i);\n\t  }\n\t\n\t  if (!hasArrayBufferView) arr = buf;\n\t  var blob = new Blob([arr], { type: mime(uri) });\n\t  blob.slice = blob.slice || blob.webkitSlice;\n\t  return blob;\n\t};\n\t\n\t/**\n\t * Return data uri mime type.\n\t */\n\t\n\tfunction mime(uri) {\n\t  return uri.split(';')[0].slice(5);\n\t}\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** react-crop.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5ae4ff13e1c4b043f1f2\n **/","import React from 'react'\nimport DraggableResizableBox from './draggable-resizable-box'\nimport toBlob from 'data-uri-to-blob'\n\nexport default React.createClass({\n  displayName: 'Cropper',\n\n  propTypes: {\n    width: React.PropTypes.number.isRequired,\n    height: React.PropTypes.number.isRequired,\n    center: React.PropTypes.bool,\n    image: React.PropTypes.any,\n    widthLabel: React.PropTypes.string,\n    heightLabel: React.PropTypes.string,\n    offsetXLabel: React.PropTypes.string,\n    offsetYLabel: React.PropTypes.string,\n    onImageLoaded: React.PropTypes.func,\n    minConstraints: React.PropTypes.arrayOf(React.PropTypes.number)\n  },\n\n  getDefaultProps () {\n    return {\n      center: false,\n      width: 'Width',\n      height: 'Height',\n      offsetXLabel: 'Offset X',\n      offsetYLabel: 'Offset Y'\n    }\n  },\n\n  getInitialState () {\n    return {\n      imageLoaded: false,\n      width: this.props.width,\n      height: this.props.height,\n      url: window.URL.createObjectURL(this.props.image)\n    }\n  },\n\n  componentWillReceiveProps (nextProps) {\n    if (this.props.image !== nextProps.image) {\n      this.setState({\n        url: window.URL.createObjectURL(nextProps.image),\n        imageLoaded: false\n      })\n    }\n  },\n\n  shouldComponentUpdate (nextProps, nextState) {\n    let {image} = this.props\n    return nextProps.image.size !== image.size ||\n        nextProps.image.name !== image.name ||\n        nextProps.image.type !== image.type ||\n        nextState.imageLoaded !== this.state.imageLoaded\n  },\n\n  onLoad (evt) {\n    let box = this.refs.box.getBoundingClientRect()\n    this.setState({\n      imageLoaded: true,\n      width: box.width,\n      height: box.height\n    }, () => {\n      let img = this.refs.image\n      this.props.onImageLoaded && this.props.onImageLoaded(img)\n    })\n  },\n\n  cropImage () {\n    return new Promise((resolve, reject) => {\n      let img = new Image()\n      img.onload = () => {\n        let canvas = this.refs.canvas\n        let img = this.refs.image\n        let ctx = canvas.getContext('2d')\n        let [xScale, yScale] = [img.naturalWidth / this.state.width,\n                                img.naturalHeight / this.state.height]\n\n        let imageOffsetX = xScale < 1 ? 0 : this.state.offset.left * xScale\n        let imageOffsetY = yScale < 1 ? 0 : this.state.offset.top * yScale\n        let imageWidth = xScale < 1 ? img.naturalWidth : this.state.dimensions.width * xScale\n        let imageHeight = yScale < 1 ? img.naturalHeight : this.state.dimensions.height * yScale\n\n        let canvasOffsetX = xScale < 1 ? Math.floor((this.state.dimensions.width - img.naturalWidth) / 2) : 0\n        let canvasOffsetY = yScale < 1 ? Math.floor((this.state.dimensions.height - img.naturalHeight) / 2) : 0\n        let canvasWidth = xScale < 1 ? img.naturalWidth : this.props.width\n        let canvasHeight = yScale < 1 ? img.naturalHeight : this.props.height\n\n        ctx.clearRect(0, 0, this.props.width, this.props.height)\n        ctx.drawImage(img, imageOffsetX, imageOffsetY, imageWidth, imageHeight, canvasOffsetX, canvasOffsetY, canvasWidth, canvasHeight)\n        resolve(toBlob(canvas.toDataURL()))\n      }\n      img.src = window.URL.createObjectURL(this.props.image)\n    })\n  },\n\n  onChange (offset, dimensions) {\n    this.setState({offset, dimensions})\n  },\n\n  render () {\n    return (\n      <div\n        ref='box'\n        className='Cropper'\n        style={{\n          minWidth: this.props.width,\n          minHeight: this.props.height\n        }}>\n        <canvas\n          className='Cropper-canvas'\n          ref='canvas'\n          width={this.props.width}\n          height={this.props.height}>\n        </canvas>\n        <img\n          ref='image'\n          src={this.state.url}\n          className='Cropper-image'\n          onLoad={this.onLoad}\n          style={{top: this.state.height / 2}}/>\n        {this.state.imageLoaded &&\n          <div className='box'>\n            <DraggableResizableBox\n              aspectRatio={this.props.width / this.props.height}\n              width={this.state.width}\n              height={this.state.height}\n              minConstraints={this.props.minConstraints}\n              onChange={this.onChange}\n              widthLabel={this.props.widthLabel}\n              heightLabel={this.props.heightLabel}\n              offsetXLabel={this.props.offsetXLabel}\n              offsetYLabel={this.props.offsetYLabel}>\n                <div className='Cropper-box'></div>\n            </DraggableResizableBox>\n          </div>}\n      </div>\n    )\n  }\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/index.src.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react\"\n ** module id = 1\n ** module chunks = 0 1\n **/","import React from 'react'\n\nexport default React.createClass({\n  displayName: 'DraggableResizableBox',\n\n  propTypes: {\n    aspectRatio: React.PropTypes.number.isRequired,\n    width: React.PropTypes.number.isRequired,\n    height: React.PropTypes.number.isRequired,\n    onChange: React.PropTypes.func,\n    offset: React.PropTypes.array,\n    minConstraints: React.PropTypes.array,\n    children: React.PropTypes.node,\n    widthLabel: React.PropTypes.string,\n    heightLabel: React.PropTypes.string,\n    offsetXLabel: React.PropTypes.string,\n    offsetYLabel: React.PropTypes.string\n  },\n\n  getDefaultProps () {\n    return {\n      widthLabel: 'Width',\n      heightLabel: 'Height',\n      offsetXLabel: 'Offset X',\n      offsetYLabel: 'Offset Y'\n    }\n  },\n\n  getInitialState () {\n    let [width, height] = this.preserveAspectRatio(this.props.width, this.props.height)\n    let centerYOffset = (this.props.height - height) / 2\n    let centerXOffset = (this.props.width - width) / 2\n    return {\n      top: centerYOffset,\n      left: centerXOffset,\n      bottom: centerYOffset,\n      right: centerXOffset,\n      width: width,\n      height: height\n    }\n  },\n\n  componentDidMount () {\n    document.addEventListener('mousemove', this.eventMove)\n    document.addEventListener('mouseup', this.eventEnd)\n    document.addEventListener('touchmove', this.eventMove)\n    document.addEventListener('touchend', this.eventEnd)\n    document.addEventListener('keydown', this.handleKey)\n    this.props.onChange({\n        top: this.state.top,\n        left: this.state.left\n    }, {\n      width: this.state.width,\n      height: this.state.height\n    })\n  },\n\n  componentWillUnmount () {\n    document.removeEventListener('mousemove', this.eventMove)\n    document.removeEventListener('mouseup', this.eventEnd)\n    document.removeEventListener('touchmove', this.eventMove)\n    document.removeEventListener('touchend', this.eventEnd)\n    document.removeEventListener('keydown', this.handleKey)\n  },\n\n  calculateDimensions ({top, left, bottom, right}) {\n    return {width: this.props.width - left - right, height: this.props.height - top - bottom}\n  },\n\n  // If you do this, be careful of constraints\n  preserveAspectRatio (width, height) {\n    if(this.props.minConstraints) {\n      width = Math.max(width, this.props.minConstraints[0])\n      height = Math.max(height, this.props.minConstraints[1])\n    }\n    const currentAspectRatio = width / height\n\n    if (currentAspectRatio < this.props.aspectRatio) {\n      return [width, width / this.props.aspectRatio]\n    } else if (currentAspectRatio > this.props.aspectRatio) {\n      return [height * this.props.aspectRatio, height]\n    } else {\n      return [width, height]\n    }\n  },\n\n  constrainBoundary (side) {\n    return side < 0 ? 0 : side\n  },\n\n  getClientCoordinates (evt) {\n    return evt.touches ? {\n      clientX: evt.touches[0].clientX,\n      clientY: evt.touches[0].clientY\n    } :\n    {\n      clientX: evt.clientX,\n      clientY: evt.clientY\n    }\n  },\n\n  eventMove (evt) {\n    if (this.state.resizing) {\n      this.onResize(evt)\n    } else if (this.state.moving) {\n      this.eventMoveBox(evt)\n    }\n  },\n\n  eventEnd (evt) {\n    if (this.state.resizing) {\n      this.stopResize(evt)\n    } else if (this.state.moving) {\n      this.stopMove(evt)\n    }\n  },\n\n  // Resize methods\n  startResize (corner, event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.setState({\n      resizing: true,\n      corner\n    })\n  },\n\n  stopResize () {\n    this.setState({resizing: false})\n  },\n\n  // resize strategies\n  nw (mousePos, boxPos) {\n    let pos = Object.assign({}, this.state, {\n      top: this.constrainBoundary(mousePos.clientY - boxPos.top),\n      left: this.constrainBoundary(mousePos.clientX - boxPos.left)\n    })\n    let dimensions = this.calculateDimensions(pos)\n    let [width, height] = this.preserveAspectRatio(dimensions.width, dimensions.height)\n    pos.top = this.props.height - pos.bottom - height\n    pos.left = this.props.width - pos.right - width\n    return pos\n  },\n  ne (mousePos, boxPos) {\n    let pos = Object.assign({}, this.state, {\n      top: this.constrainBoundary(mousePos.clientY - boxPos.top),\n      right: this.constrainBoundary(boxPos.right - mousePos.clientX)\n    })\n    let dimensions = this.calculateDimensions(pos)\n    let [width, height] = this.preserveAspectRatio(dimensions.width, dimensions.height)\n    pos.top = this.props.height - pos.bottom - height\n    pos.right = this.props.width - pos.left - width\n    return pos\n  },\n  se (mousePos, boxPos) {\n    let pos = Object.assign({}, this.state, {\n      bottom: this.constrainBoundary(boxPos.bottom - mousePos.clientY),\n      right: this.constrainBoundary(boxPos.right - mousePos.clientX)\n    })\n    let dimensions = this.calculateDimensions(pos)\n    let [width, height] = this.preserveAspectRatio(dimensions.width, dimensions.height)\n    pos.bottom = this.props.height - pos.top - height\n    pos.right = this.props.width - pos.left - width\n    return pos\n  },\n  sw (mousePos, boxPos) {\n    let pos = Object.assign({}, this.state, {\n      bottom: this.constrainBoundary(boxPos.bottom - mousePos.clientY),\n      left: this.constrainBoundary(mousePos.clientX - boxPos.left)\n    })\n    let dimensions = this.calculateDimensions(pos)\n    let [width, height] = this.preserveAspectRatio(dimensions.width, dimensions.height)\n    pos.bottom = this.props.height - pos.top - height\n    pos.left = this.props.width - pos.right - width\n    return pos\n  },\n\n  onResize (event) {\n    let box = this.refs.box.parentElement.parentElement.getBoundingClientRect()\n    let coordinates = this.getClientCoordinates(event)\n    let position = this[this.state.corner](coordinates, box)\n    this.resize(position, coordinates)\n  },\n\n  controlsResize (event) {\n    let box = this.refs.box.parentElement.parentElement.getBoundingClientRect()\n    let width = event.target.name === 'width' ? +event.target.value : +event.target.value * this.props.aspectRatio\n    let height = event.target.name === 'height' ? +event.target.value : +event.target.value / this.props.aspectRatio\n    let dimensions = this.preserveAspectRatio(width, height)\n    width = dimensions[0]\n    height = dimensions[1]\n\n    if (width > box.width - this.state.left ||\n        height > box.height - this.state.top) return\n\n    let widthDifference = this.state.width - width\n    let heightDifference = this.state.height - height\n    let pos = Object.assign({}, this.state, {\n      right: this.state.right + widthDifference,\n      bottom: this.state.bottom + heightDifference\n    })\n    let coordinates = {\n      clientX: box.right - pos.right,\n      clientY: box.bottom - pos.bottom\n    }\n\n    this.resize(pos, coordinates)\n  },\n\n  resize (position, coordinates) {\n    let dimensions = this.calculateDimensions(position)\n    var widthChanged = dimensions.width !== this.state.width, heightChanged = dimensions.height !== this.state.height\n    if (!widthChanged && !heightChanged) return\n\n    this.setState(Object.assign({}, coordinates, position, dimensions), () => {\n      this.props.onChange({\n        top: position.top,\n        left: position.left\n      }, dimensions)\n    })\n  },\n\n  // Move methods\n  startMove (evt) {\n    let {clientX, clientY} = this.getClientCoordinates(evt)\n    this.setState({\n      moving: true,\n      clientX: clientX,\n      clientY: clientY\n    })\n  },\n\n  stopMove (evt) {\n    this.setState({\n      moving: false\n    })\n  },\n\n  eventMoveBox (evt) {\n    evt.preventDefault()\n    let {clientX, clientY} = this.getClientCoordinates(evt)\n    let movedX = clientX - this.state.clientX\n    let movedY = clientY - this.state.clientY\n\n    this.moveBox(clientX, clientY, movedX, movedY)\n  },\n\n  controlsMoveBox (evt) {\n    let movedX = evt.target.name === 'x' ? evt.target.value - this.state.left : 0\n    let movedY = evt.target.name === 'y' ? evt.target.value - this.state.top : 0\n    this.moveBox(0, 0, movedX, movedY)\n  },\n\n  moveBox (clientX, clientY, movedX, movedY) {\n    let position = {\n      top: this.constrainBoundary(this.state.top + movedY),\n      left: this.constrainBoundary(this.state.left + movedX),\n      bottom: this.constrainBoundary(this.state.bottom - movedY),\n      right: this.constrainBoundary(this.state.right - movedX)\n    }\n\n    if (!position.top) {\n      position.bottom = this.props.height - this.state.height\n    }\n    if (!position.bottom) {\n      position.top = this.props.height - this.state.height\n    }\n    if (!position.left) {\n      position.right = this.props.width - this.state.width\n    }\n    if (!position.right) {\n      position.left = this.props.width - this.state.width\n    }\n\n    this.setState(Object.assign({}, {\n      clientX: clientX,\n      clientY: clientY\n    }, position), () => {\n      this.props.onChange({\n        top: position.top,\n        left: position.left\n      }, this.calculateDimensions(position))\n    })\n  },\n\n  keyboardResize (change) {\n    if (this.state.right - change < 0) { return }\n    if (this.state.bottom - change < 0) { return }\n\n    const [width, height] = this.preserveAspectRatio(\n      this.state.width + change,\n      this.state.height + change\n    )\n    const widthChange = width - this.state.width\n    const heightChange = height - this.state.height\n\n    this.setState({\n      bottom: this.state.bottom - heightChange,\n      right: this.state.right - widthChange,\n      width,\n      height\n    })\n  },\n\n  handleKey (event) {\n    if (event.shiftKey) {\n      if (event.key === 'ArrowUp') {\n        this.keyboardResize(-10)\n        event.preventDefault()\n      } else if (event.key === 'ArrowDown') {\n        this.keyboardResize(10)\n        event.preventDefault()\n      } else if (event.key === 'ArrowLeft') {\n        this.keyboardResize(-10)\n        event.preventDefault()\n      } else if (event.key === 'ArrowRight') {\n        this.keyboardResize(10)\n        event.preventDefault()\n      }\n    } else {\n      if (event.key === 'ArrowUp') {\n        this.moveBox(this.state.clientX, this.state.clientY, 0, -10)\n        event.preventDefault()\n      } else if (event.key === 'ArrowDown') {\n        this.moveBox(this.state.clientX, this.state.clientY, 0, 10)\n        event.preventDefault()\n      } else if (event.key === 'ArrowLeft') {\n        this.moveBox(this.state.clientX, this.state.clientY, -10, 0)\n        event.preventDefault()\n      } else if (event.key === 'ArrowRight') {\n        this.moveBox(this.state.clientX, this.state.clientY, 10, 0)\n        event.preventDefault()\n      }\n    }\n  },\n\n  render () {\n    let style = {\n      position: 'absolute',\n      top: this.state.top,\n      left: this.state.left,\n      right: this.state.right,\n      bottom: this.state.bottom\n    }\n    let {width, height} = this.calculateDimensions(this.state)\n    let topStyle = {\n      height: this.state.top\n    }\n    let bottomStyle = {\n      height: this.state.bottom\n    }\n    let leftStyle = {\n      top: this.state.top,\n      right: width + this.state.right,\n      bottom: this.state.bottom\n    }\n    let rightStyle = {\n      top: this.state.top,\n      left: width + this.state.left,\n      bottom: this.state.bottom\n    }\n\n    return (\n      <div ref='box' className='DraggableResizable'>\n        <div className='DraggableResizable-controls'>\n          <label>\n            {this.props.offsetXLabel}\n            <input\n              name='x'\n              value={Math.round(this.state.left)}\n              onChange={this.controlsMoveBox}\n              tabIndex=\"-1\"\n              type='number' />\n          </label>\n          <label>\n            {this.props.offsetYLabel}\n            <input\n              name='y'\n              value={Math.round(this.state.top)}\n              onChange={this.controlsMoveBox}\n              tabIndex=\"-1\"\n              type='number' />\n          </label>\n          <label>\n            {this.props.widthLabel}\n            <input\n              name='width'\n              value={Math.round(width)}\n              type='number'\n              tabIndex=\"-1\"\n              onChange={this.controlsResize} />\n          </label>\n          <label>\n            {this.props.heightLabel}\n            <input\n              value={Math.round(height)}\n              type='number'\n              name='height'\n              tabIndex=\"-1\"\n              onChange={this.controlsResize} />\n          </label>\n        </div>\n        <div className='DraggableResizable-top' style={topStyle}></div>\n        <div className='DraggableResizable-left' style={leftStyle}></div>\n        <div style={style} onMouseDown={this.startMove} onTouchStart={this.startMove}>\n          {this.props.children}\n          <div className='resize-handle resize-handle-se'\n            onMouseDown={this.startResize.bind(null, 'se')}\n            onTouchStart={this.startResize.bind(null, 'se')}>\n          </div>\n          <div className='resize-handle resize-handle-ne'\n            onMouseDown={this.startResize.bind(null, 'ne')}\n            onTouchStart={this.startResize.bind(null, 'ne')}>\n          </div>\n          <div className='resize-handle resize-handle-sw'\n            onMouseDown={this.startResize.bind(null, 'sw')}\n            onTouchStart={this.startResize.bind(null, 'sw')}>\n          </div>\n          <div className='resize-handle resize-handle-nw'\n            onMouseDown={this.startResize.bind(null, 'nw')}\n            onTouchStart={this.startResize.bind(null, 'nw')}>\n          </div>\n        </div>\n        <div className='DraggableResizable-right' style={rightStyle}></div>\n        <div className='DraggableResizable-bottom' style={bottomStyle}></div>\n      </div>\n    )\n  }\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/draggable-resizable-box.js\n **/","\n/**\n * Blob constructor.\n */\n\nvar Blob = window.Blob;\n\n/**\n * ArrayBufferView support.\n */\n\nvar hasArrayBufferView = new Blob([new Uint8Array(100)]).size == 100;\n\n/**\n * Return a `Blob` for the given data `uri`.\n *\n * @param {String} uri\n * @return {Blob}\n * @api public\n */\n\nmodule.exports = function(uri){\n  var data = uri.split(',')[1];\n  var bytes = atob(data);\n  var buf = new ArrayBuffer(bytes.length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < bytes.length; i++) {\n    arr[i] = bytes.charCodeAt(i);\n  }\n\n  if (!hasArrayBufferView) arr = buf;\n  var blob = new Blob([arr], { type: mime(uri) });\n  blob.slice = blob.slice || blob.webkitSlice;\n  return blob;\n};\n\n/**\n * Return data uri mime type.\n */\n\nfunction mime(uri) {\n  return uri.split(';')[0].slice(5);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/data-uri-to-blob/index.js\n ** module id = 3\n ** module chunks = 0 1\n **/"],"sourceRoot":""}